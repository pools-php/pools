name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag starting with 'v'

permissions:
  contents: write  # This gives permission to create releases

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # This is important for commit history

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Conventional Changelog
        run: |
          npm install -g conventional-changelog-cli

      - name: Extract version from tag
        id: get_version
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Generate Changelog
        run: |
          # Get the previous tag if it exists
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -n "$PREVIOUS_TAG" ]; then
            # Generate changelog between tags
            echo "Generating changelog from $PREVIOUS_TAG to $GITHUB_REF"
            conventional-changelog -p angular -r 2 > RELEASE_NOTES.md
          else
            # First release - generate full changelog
            echo "Generating full changelog for first release"
            conventional-changelog -p angular -r 2 > RELEASE_NOTES.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, mbstring, zip
          coverage: none

      - name: Trigger Packagist Update
        run: |
          curl -XPOST -H "content-type:application/json" "https://packagist.org/api/update-package?username=${{ secrets.PACKAGIST_USERNAME }}&apiToken=${{ secrets.PACKAGIST_API_TOKEN }}" -d '{"repository":{"url":"https://github.com/${{ github.repository }}"}}'
